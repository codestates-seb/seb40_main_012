import Grid from '@mui/material/Grid';
import { useState } from 'react';
import styled from 'styled-components';
import DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';
import Typography from '@mui/material/Typography';
import FavoriteTwoToneIcon from '@mui/icons-material/FavoriteTwoTone';
import StarBorderRoundedIcon from '@mui/icons-material/StarBorderRounded';

const ContentContainer = styled.div`
  input {
    appearance: none;
    width: 20px;
    height: 20px;
    border: 1.5px solid gainsboro;
    border-radius: 0.35rem;
    margin-top: -0.1px;
    &:checked {
      border-color: transparent;
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M5.707 7.293a1 1 0 0 0-1.414 1.414l2 2a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0-1.414-1.414L7 8.586 5.707 7.293z'/%3e%3c/svg%3e");
      background-size: 100% 100%;
      background-position: 50%;
      background-repeat: no-repeat;
      background-color: #cfc3ff;
    }
  }
`;
const BookImg = styled.div`
  .resize {
    box-sizing: inherit;
    width: 108px !important;
    height: 164px !important;
    margin-left: 10px;
  }
`;

const CommentContainer = styled.div`
  display: flex;
  flex-direction: row;
`;
const FlexBox = styled.div`
  display: flex;
  flex-direction: column;
  margin-left: 20px;
  margin-right: 10px;
  font-size: 13px;
  .comment {
    height: 125px;
    color: #232627;
  }
  .heart-star-title {
    display: flex;
    flex-direction: row;
  }
`;
const ButtonCSS = styled.button`
  outline: none;
  display: inline-block;
  margin: 0;
  text-transform: uppercase;
  cursor: pointer;
  border: 0;
  outline: 0;
  background: transparent;
`;

// Ïª¥Ìè¨ÎÑåÌä∏ Î∞òÎ≥µÌï¥ÏÑú Î≥¥Ïó¨Ï§Ñ Ìï®Ïàò, data.starÏùò ÏàòÍ∞Ä 1Ïù¥Î©¥ 1Î≤à, 5Î©¥ 5Î≤à
// const showStar = () => {

// };

const Content = () => {
  // const [view, setView] = useState(1);
  const [editMode, setEditMode] = useState(false);

  // const handleChangeView = (event) => {
  //   setView(event.target.value);
  // };
  const handleChangeEditMode = () => {
    setEditMode(!editMode);
  };

  const [data, setData] = useState([
    {
      id: 0,
      src: 'https://shopping-phinf.pstatic.net/main_3546279/35462795630.20221101101451.jpg?type=w300',
      content:
        'ÏÇ¨ÏÉÅÏÇ¨ Ïó∞Íµ¨ÏûêÏù¥Ïûê ÏπºÎüºÎãàÏä§Ìä∏Ïù∏ ÍπÄÏòÅÎØº ÏÑúÏö∏ÎåÄ ÍµêÏàòÍ∞Ä Îì§Î†§Ï£ºÎäî Ïù∏ÏÉùÏùò ÌóàÎ¨¥ÏôÄ ÎçîÎ∂àÏñ¥ ÏÇ¨Îäî Î≤ï. Î∂ÅÏÜ°ÏãúÎåÄ Î¨∏Ïû•Í∞Ä ÏÜåÏãùÏùò „ÄåÏ†ÅÎ≤ΩÎ∂Ä„ÄçÎ•º Î™®Ìã∞ÌîÑ ÏÇºÏïÑ, Ïù∏Î•òÏùò Î≥¥Ìé∏Ï†Å Î¨∏Ï†úÏù∏ ‚ÄòÌóàÎ¨¥‚ÄôÏóê ÎåÄÌïú Ïò§ÎûòÎêú ÏÇ¨Ïú†Ïùò Í≤∞Í≥ºÎ¨ºÏùÑ Í∑∏ÎßåÏùò ÎèÖÌäπÌïú ÏãúÏÑ†ÏúºÎ°ú Ìè¨Ï∞©Ìï¥ÎÇ¥Í≥† Ïû¨Ìï¥ÏÑùÌñàÎã§. ÌóàÎ¨¥ÎùºÎäî Ï£ºÏ†úÎ•º Îã§Î£¨ ÎßåÌÅº Ï£ΩÏùåÍ≥º Ìï¥Í≥®Ïù¥ Îì±Ïû•ÌïòÏßÄÎßå, ÍπÄÏòÅÎØºÏãùÏùò Ïú†Î®∏ÏôÄ ÌÜµÏ∞∞ ÎçïÎ∂ÑÏóê ÎÑàÎ¨¥ Î¨¥Í≤ÅÏßÄ ÏïäÏúºÎ©¥ÏÑúÎèÑ ÎÑàÎ¨¥ Í∞ÄÎ≥çÏßÄ ÏïäÍ≤å ÌóàÎ¨¥Î•º ÏßÅÎ©¥ÌïòÍ≥† Î∞õÏïÑÎì§Ïùº Ïàò ÏûàÎã§. Ïù∏ÏÉùÏù¥ ÌóàÎ¨¥ÌïòÎã§Í≥† ÎäêÍª¥ÏßÄÎäî ÏàúÍ∞ÑÏùÑ Í≤ΩÌóòÌïú Ïù¥ÎùºÎ©¥ Í∑∏Ïùò Í∏ÄÏùÑ ÌÜµÌï¥ ÏùºÏÉÅÏùÑ Î≤ÑÌã∏ Ïàò ÏûàÎäî ÏûëÏùÄ ÏúÑÏïàÏùÑ ÏñªÏùÑ Ïàò ÏûàÎã§. Ï≤úÏ≤úÌûà ÏùΩÏùÑÏàòÎ°ù, Í≥ÅÏóê ÎëêÍ≥† Ïò§Îûò ÏùåÎØ∏Ìï†ÏàòÎ°ù Í∑∏ Í∞ÄÏπòÍ∞Ä ÎπõÏùÑ Î∞úÌïúÎã§.',
      star: 5,
    },
    {
      id: 1,
      src: 'https://shopping-phinf.pstatic.net/main_3248962/32489623089.20221019150721.jpg?type=w300',
      content:
        '‚ÄòÎ≤ÑÏßÄÎãàÏïÑ Ïö∏ÌîÑ Ï†ÑÏßë‚ÄôÏù¥ 29ÎÖÑ ÎßåÏóê ÏôÑÍ∞ÑÏùÑ Í∏∞ÎÖêÌïòÏó¨ ÌäπÎ≥ÑÌïú ÎîîÏûêÏù∏Í≥º ÎçîÏö± Í∞ÄÎ≤ºÏõåÏßÑ ÌåêÌòïÏúºÎ°ú ÎèÖÏûêÎì§ÏùÑ Ï∞æÏïÑÍ∞ÑÎã§. Ï°∞Ïù¥Ïä§, ÌîÑÎ£®Ïä§Ìä∏ÏôÄ Ìï®Íªò ‚ÄòÏùòÏãùÏùò ÌùêÎ¶Ñ‚ÄôÏùò ÎåÄÍ∞ÄÎùº Î∂àÎ¶¨Îäî Ïö∏ÌîÑÎäî Ïù¥ Ïã§ÌóòÏ†ÅÏù∏ Í∏∞Î≤ïÏùÑ ÌÜµÌï¥ Ïù∏Í∞Ñ Ïã¨Î¶¨Ïùò Í∞ÄÏû• ÍπäÏùÄ Í≥≥ÍπåÏßÄ ÌååÍ≥†Îì† ÏûëÍ∞ÄÏù¥Îã§.',
      star: 3,
    },
    {
      id: 2,
      src: 'https://image.aladin.co.kr/product/23601/3/cover500/e702537182_1.jpg',
      content:
        '4Í∂åÏùÄ Ï†úÏù∏ Ïò§Ïä§Ìã¥Ïù¥ Ïä§Î¨¥ ÏÇ¥ Îïå Ïì¥ Í≤ÉÏúºÎ°ú, ÏòÅÍµ≠ÏùÑ Î¨¥ÎåÄÎ°ú Ïó¨ÏÑ±Ïùò Í≤∞ÌòºÍ≥º Ïò§Ìï¥ÏôÄ Ìé∏Í≤¨ÏóêÏÑú ÏùºÏñ¥ÎÇòÎäî ÏÇ¨ÎûëÏùò ÏóáÍ∞àÎ¶ºÏùÑ Í∑∏Î¶∞ Ïó∞Ïï† ÏÜåÏÑ§Ïù¥Îã§. ÏÑ∏Î∞ÄÌïú Ïù∏Î¨º Î¨òÏÇ¨ÏôÄ ÌíçÏûê, ÏïÑÏù¥Îü¨Îãà, Í∞ÑÍ≤∞ÌïòÍ≤å ÎåÄÌôîÎ•º Ï≤òÎ¶¨ÌïòÎäî Í∏∞Î≤ïÏúºÎ°ú Ïò§Ïä§Ìã¥Ïùò ÏûëÌíà Ï§ë Í±∏ÏûëÏúºÎ°ú Ïú†Î™ÖÌïòÎã§.',
      star: 4,
    },
  ]);

  const onRemove = (targetId) => {
    const newCommentList = data.filter((el) => el.id !== targetId);
    setData(newCommentList);
  };

  const handleClickRemove = () => {
    if (window.confirm(`${data[0].id}Î≤àÏß∏ ÏΩîÎ©òÌä∏Î•º Ï†ïÎßê ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?`)) {
      onRemove(data[0].id);
    }
  };

  const [checkItems, setCheckItems] = useState([]);
  const handleSingleCheck = (checked, id) => {
    if (checked) {
      setCheckItems((prev) => [...prev, id]);
    } else {
      setCheckItems(checkItems.filter((el) => el !== id));
    }
  };

  const handleAllCheck = (checked) => {
    if (checked) {
      const idArray = [];
      data.forEach((el) => idArray.push(el.id));
      setCheckItems(idArray);
    } else {
      setCheckItems([]);
    }
  };

  return (
    <>
      <ContentContainer>
        <Grid container xs={12}>
          <Grid item xs={5.5} sx={{ mt: 1, mb: 2 }}>
            <CommentContainer>
              {editMode ? (
                <>
                  <input
                    type="checkbox"
                    name="select-all"
                    onChange={(e) => handleAllCheck(e.target.checked)}
                    checked={checkItems.length === data.length ? true : false}
                  ></input>
                  <Typography
                    color="#737373"
                    variant="body2"
                    gutterBottom
                    sx={{ ml: 2 }}
                  >
                    Ï†ÑÏ≤¥ ÏÑ†ÌÉù
                  </Typography>
                </>
              ) : null}
            </CommentContainer>
          </Grid>

          <Grid
            xs={6.5}
            item
            sx={{
              mt: 1,
              mb: 2,
              display: 'flex',
              flexDirection: 'row-reverse',
            }}
          >
            {editMode ? (
              <>
                <ButtonCSS onClick={handleClickRemove}>
                  <Typography color="#737373" variant="body2" gutterBottom>
                    ÏÑ†ÌÉù ÏÇ≠Ï†ú
                  </Typography>
                </ButtonCSS>

                <ButtonCSS onClick={handleChangeEditMode}>
                  <Typography color="#737373" variant="body2" gutterBottom>
                    Ìé∏Ïßë ÏôÑÎ£å
                  </Typography>
                </ButtonCSS>
              </>
            ) : (
              <ButtonCSS onClick={handleChangeEditMode}>
                <Typography
                  color="#737373"
                  sx={{
                    display: 'flex',
                    flexDirection: 'row-reverse',
                  }}
                  variant="body2"
                  gutterBottom
                >
                  Î™©Î°ù Ìé∏Ïßë
                </Typography>
              </ButtonCSS>
            )}
          </Grid>
        </Grid>

        <div>
          {data?.map((data, key) => (
            <div key={key}>
              <Grid
                container
                xs={12}
                sx={{
                  display: 'flex',
                  flexDirection: 'row',
                }}
              >
                <Grid item xs={0.5} sx={{ width: 20 }}>
                  {editMode ? (
                    <>
                      <input
                        type="checkbox"
                        name={`select-${data.id}`}
                        onChange={(e) =>
                          handleSingleCheck(e.target.checked, data.id)
                        }
                        checked={checkItems.includes(data.id) ? true : false}
                      />
                    </>
                  ) : null}
                </Grid>

                <Grid item xs={2}>
                  <BookImg>
                    <img
                      className="resize"
                      src={data.src}
                      alt="book thumbnail"
                    ></img>
                  </BookImg>
                </Grid>
                <Grid item xs={9}>
                  <FlexBox>
                    <Typography
                      color="#232627"
                      sx={{
                        height: 125,
                      }}
                      variant="body2"
                      gutterBottom
                    >
                      {data.content}
                    </Typography>

                    <div className="heart-star-title">
                      <Grid item xs={3}>
                        <StarBorderRoundedIcon
                          align="center"
                          style={{ color: 'FFF599' }}
                        />
                      </Grid>
                      <Grid
                        item
                        xs={3}
                        sx={{
                          display: 'flex',

                          alignItems: 'center',
                        }}
                        color="#BFBFBF"
                      >
                        <FavoriteTwoToneIcon
                          sx={{ width: 19.5, height: 19.5 }}
                          align="center"
                          style={{ color: 'FFD8D8' }}
                        />
                        177
                      </Grid>
                      <Grid
                        item
                        xs={6}
                        sx={{
                          display: 'flex',
                          flexDirection: 'row-reverse',
                        }}
                        align="right"
                        color="#737373"
                      >
                        <div>Ï†úÎ™©Í≥º ÏûëÍ∞Äüéñ</div>
                      </Grid>
                    </div>
                  </FlexBox>
                </Grid>
                <Grid
                  item
                  xs={0.5}
                  sx={{
                    display: 'flex',
                    flexDirection: 'row-reverse',
                  }}
                >
                  {editMode ? (
                    <DeleteOutlinedIcon
                      color="disabled"
                      onClick={() => {
                        if (
                          window.confirm(
                            `${data.id}Î≤àÏß∏ ÏΩîÎ©òÌä∏Î•º ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?`
                          )
                        ) {
                          onRemove(data.id);
                        }
                      }}
                    />
                  ) : null}
                </Grid>
              </Grid>
            </div>
          ))}
        </div>
      </ContentContainer>
    </>
  );
};
export default Content;
